name: Build and Publish Hub

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kreed/ridelines-hub
  PUBLIC_MAPTILER_API_KEY: ${{ secrets.MAPTILER_API_KEY }}
  PUBLIC_CLERK_PUBLISHABLE_KEY: __CLERK_PUBLISHABLE_KEY__

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm update @kreed/ridelines-chainring
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check

      - name: Run tests
        run: npm run test

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm update @kreed/ridelines-chainring
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/
          retention-days: 1

  publish:
    name: Publish
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-output
          path: build/

      - name: Get hub commit SHA
        id: hub_sha
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          echo "sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
          echo "Hub commit SHA: ${COMMIT_SHA}"

      - name: Create Hub Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM scratch
          COPY build/ /static-site/
          EOF

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ridelines.hub.commit=${{ steps.hub_sha.outputs.sha }}

      - name: Trigger bundle build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.FRAME_REPO_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'kreed',
              repo: 'ridelines-frame',
              workflow_id: 'build-bundle.yml',
              ref: 'main',
              inputs: {
                triggered_by: 'hub'
              }
            });
            console.log('Bundle build triggered from hub workflow');
